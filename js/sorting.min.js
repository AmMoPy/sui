import{state,saveState}from"./state.min.js";import{loadItems}from"./playlist.min.js";const sortOptions=[{field:"name",dir:"asc",label:"Name (↑)"},{field:"name",dir:"desc",label:"Name (↓)"},{field:"timestamp",dir:"desc",label:"Date (↓)"},{field:"timestamp",dir:"asc",label:"Date (↑)"},{field:"finalSize",dir:"desc",label:"Size (↓)"},{field:"finalSize",dir:"asc",label:"Size (↑)"}];let currentSortIndex=0;function initializeSortButton(buttonElement){if(state.sortPreferences){currentSortIndex=sortOptions.findIndex((option=>option.field===state.sortPreferences.field&&option.dir===state.sortPreferences.direction));if(currentSortIndex===-1)currentSortIndex=0}updateSortButtonText(buttonElement)}function updateSortButtonText(buttonElement){buttonElement.textContent=`Sort by ${sortOptions[currentSortIndex].label}`;buttonElement.setAttribute("aria-label",`Sort by ${sortOptions[currentSortIndex].label}`)}function cycleSortOrder(buttonElement){currentSortIndex=(currentSortIndex+1)%sortOptions.length;updateSortButtonText(buttonElement);updateSortPreferences()}function cycleSortOrderReverse(buttonElement){currentSortIndex=(currentSortIndex-1+sortOptions.length)%sortOptions.length;updateSortButtonText(buttonElement);updateSortPreferences()}function updateSortPreferences(){state.sortPreferences={field:sortOptions[currentSortIndex].field,direction:sortOptions[currentSortIndex].dir};saveState();loadItems()}export{cycleSortOrder,cycleSortOrderReverse,initializeSortButton};