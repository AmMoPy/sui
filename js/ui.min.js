import{elements}from"./elements.min.js";import{state,saveState}from"./state.min.js";function renderPlayList(){elements.playList.innerHTML="";elements.playList.style.display=state.isPlaylistVisible?"block":"none";state.items.forEach(((item,index)=>{const li=document.createElement("li");li.textContent=item.name;li.dataset.index=index;if(index===state.currentIndex)li.classList.add("now-playing");if(state.selectedItems.has(index))li.classList.add("selected");elements.playList.appendChild(li)}))}function handleResponsiveLayout(){const isMobilePortrait=window.matchMedia("(max-width: 767px) and (orientation: portrait)").matches;elements.togglePlaylistBtn.style.display="flex";elements.playlistSection.style.display="block";elements.playlistSection.classList.toggle("visible",state.isPlaylistVisible)}function speakText(text){if("speechSynthesis"in window&&"SpeechSynthesisUtterance"in window){window.speechSynthesis.cancel();const speech=new SpeechSynthesisUtterance(text);speech.rate=.9;speech.volume=1;window.speechSynthesis.speak(speech)}else{console.log("Text to speech not available:",text);showStatusMessage(text,"info")}}function showStatusMessage(message,type="info"){const existingStatus=document.querySelector(".status-message");if(existingStatus){existingStatus.remove()}const status=document.createElement("div");status.className="status-message";status.textContent=message;status.setAttribute("role","alert");status.style.position="fixed";status.style.bottom="20px";status.style.left="20px";status.style.padding="15px 25px";status.style.borderRadius="10px";status.style.zIndex="1000";status.style.fontSize="24px";if(type==="error"){status.style.backgroundColor="#ff4444";status.style.color="white"}else if(type==="success"){status.style.backgroundColor="#4CAF50";status.style.color="white"}else{status.style.backgroundColor="#2196F3";status.style.color="white"}document.body.appendChild(status);setTimeout((()=>{status.style.transition="opacity 1s";status.style.opacity="0";setTimeout((()=>status.remove()),1e3)}),5e3)}function lightMode(){const toggle=document.getElementById("light-mode-toggle");const root=document.documentElement;const particles=document.getElementById("particles-js");const updateToggleIcon=()=>{const icons={0:"moon",1:"sun",2:"moon-muted"};toggle.dataset.mode=icons[state.colorMode]};const applySavedState=()=>{root.classList.remove("light-mode","no-animation");particles.classList.remove("no-animation");switch(state.colorMode){case 1:root.classList.add("light-mode");break;case 2:root.classList.add("no-animation");particles.classList.add("no-animation");window.updateParticlesAnimation(false);break;default:window.updateParticlesAnimation(true)}updateToggleIcon()};const updateMode=()=>{state.colorMode=(state.colorMode+1)%3;applySavedState();saveState();void root.offsetHeight};applySavedState();toggle.addEventListener("click",updateMode)}export{renderPlayList,handleResponsiveLayout,speakText,showStatusMessage,lightMode};